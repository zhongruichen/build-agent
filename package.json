{
  "name": "multi-agent-helper", "displayName": "多智能体助手", "description": "一个能够协同完成复杂软件开发任务的VS Code多智能体插件。", "version": "2.2.0", "publisher": "jules-agent",
  "engines": {
    "vscode": "^1.89.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/zhongruichen/open-agent-system"
  },
"activationEvents": [ "onCommand:multi-agent-helper.startTask" ], "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "multi-agent-helper.startTask",
        "title": "开始多智能体任务"
      }
    ],
    "configuration": {
      "title": "多智能体助手",
      "properties": {
        "multiAgent.models": {
          "type": "array",
          "default": [],
          "description": "在此处定义所有可用的语言模型。",
          "items": {
            "type": "object",
            "title": "模型定义",
            "properties": {
              "name": {
                "type": "string",
                "description": "为此模型定义一个唯一的名称 (例如, '我的-GPT4')。"
              },
              "provider": {
                "type": "string",
                "description": "模型的供应商。",
                "enum": [
                  "OpenAI",
                  "Anthropic",
                  "Google",
                  "Custom"
                ]
              },
              "modelName": {
                "type": "string",
                "description": "要使用的模型的具体名称 (例如, 'gpt-4-turbo')。"
              },
              "apiKey": {
                "type": "string",
                "description": "模型供应商的API密钥。",
                "format": "password"
              },
              "baseUrl": {
                "type": "string",
                "description": "API端点的基础URL (用于自定义或自托管模型)。"
              },
              "agentPrompt": {
                "type": "string",
                "description": "用于此模型的默认系统提示。",
                "format": "multiline"
              }
            },
            "required": [
              "name",
              "provider",
              "modelName",
              "apiKey"
            ]
          }
        },
        "multiAgent.enableLongTermMemory": {
          "type": "boolean",
          "default": false,
          "description": "启用或禁用长期记忆功能，允许智能体从过去的任务中学习。"
        },
        "multiAgent.enableAgentCollaboration": {
          "type": "boolean",
          "default": false,
          "description": "启用或禁用智能体协作功能（实验性），例如直接通信和动态任务分配。"
        },
        "multiAgent.roles": {
          "type": "array",
          "description": "定义所有可用的智能体角色及其配置。",
          "default": [
            {
              "name": "Orchestrator",
              "model": "",
              "systemPrompt": "你是一位专业的软件开发项目经理。你的职责是把用户的需求分解成一个清晰、分步的计划。\n你必须以一个JSON对象的形式输出你的计划，该对象包含一个键 \"plan\"，其值为一个对象数组。\n每个对象代表一个子任务，必须包含以下键：\n- \"id\": 一个从1开始的唯一整数标识符。\n- \"description\": 对工人智能体的清晰、可操作的指令字符串。\n- \"dependencies\": 一个整数数组，列出了这个任务开始前必须完成的其他任务的 \"id\"。如果一个任务没有依赖项，则此数组应为空 []。",
              "allowedTools": []
            },
            {
              "name": "Worker",
              "model": "",
              "systemPrompt": "你是一个“工人”智能体。你的工作是执行项目经理分配给你的单个任务。\n你可用的工具有：\n- 'fileSystem.writeFile'\n- 'fileSystem.readFile'\n- 'fileSystem.listFiles'\n- 'fileSystem.summarizeFile'\n- 'terminal.executeCommand'\n- 'webSearch.search'\n- 'git.getCurrentBranch'\n- 'git.createBranch'\n- 'git.stageFiles'\n- 'git.commit'\n- 'debugger.start'\n- 'debugger.stop'\n- 'debugger.addBreakpoint'\n- 'debugger.removeBreakpoint'\n- 'debugger.next'\n- 'debugger.stepIn'\n- 'debugger.stepOut'\n- 'debugger.continue'\n- 'debugger.evaluate'\n你必须以一个只包含 \"toolName\" 和 \"args\" 键的JSON对象作为响应。",
              "allowedTools": ["fileSystem.writeFile", "fileSystem.readFile", "fileSystem.listFiles", "fileSystem.summarizeFile", "terminal.executeCommand", "webSearch.search", "git.getCurrentBranch", "git.createBranch", "git.stageFiles", "git.commit", "debugger.start", "debugger.stop", "debugger.addBreakpoint", "debugger.removeBreakpoint", "debugger.next", "debugger.stepIn", "debugger.stepOut", "debugger.continue", "debugger.evaluate"]
            },
            {
              "name": "Synthesizer",
              "model": "",
              "systemPrompt": "你是一个“整合者”智能体。你的职责是接收用户的原始请求和所有已完成子任务的摘要，然后生成最终的、完整的产物。\n你只应该输出最终的产物本身，不带任何解释、代码块标记或其他文本。",
              "allowedTools": []
            },
            {
              "name": "Evaluator",
              "model": "",
              "systemPrompt": "你是一个“评估者”智能体。你的职责是严格评估最终产物是否满足用户的原始请求和所有上下文信息。\n你必须提供一个1到10的分数，并给出具体的改进建议。\n你必须以一个只包含 \"score\" 和 \"suggestions\" (一个字符串数组) 键的JSON对象作为响应。",
              "allowedTools": []
            },
            {
              "name": "CritiqueAggregator",
              "model": "",
              "systemPrompt": "你是一个“评论聚合者”智能体。你的职责是接收来自多个评估者的多个评估（分数和建议），并生成一个单一的、简洁的最终评估。\n你必须以一个只包含 \"score\" (一个数字) 和 \"summary\" (一个字符串) 键的JSON对象作为响应。",
              "allowedTools": []
            },
            {
              "name": "CodebaseScanner",
              "model": "",
              "systemPrompt": "你是一个“代码库扫描员”智能体。你的职责是接收一个代码文件的内容，并用一句话总结它的主要功能。例如，“一个实现快速排序的JS模块”。",
              "allowedTools": []
            },
            {
              "name": "Reflector",
              "model": "",
              "systemPrompt": "你是一个“反思者”智能体。你的工作是诊断另一个智能体执行任务失败的原因，并提出一个具体的、修正后的下一步行动。\n你必须以一个只包含 \"cause\" 和 \"nextStep\" 键的JSON对象作为响应。",
              "allowedTools": []
            },
            {
              "name": "Reviewer",
              "model": "",
              "systemPrompt": "You are a \"Reviewer\" agent. Your role is to be a meticulous and constructive code and plan reviewer. You will be given a proposed action from another agent, such as a code snippet to be written to a file or a shell command to be executed.\nYour task is to analyze the proposed action and provide a critical review.\nYou must respond with a JSON object containing two keys:\n- \"approved\": A boolean value. `true` if the action is good and can proceed as is, `false` if there are issues.\n- \"feedback\": A string containing your detailed critique and specific, actionable suggestions for improvement if `approved` is `false`. If `approved` is `true`, this can be a brief confirmation message.\nYou do not have access to any tools. Your only function is to review and provide feedback.",
              "allowedTools": []
            },
            {
              "name": "KnowledgeExtractor",
              "model": "",
              "systemPrompt": "你是一个“知识提取者”智能体。你的职责是分析一个完整的任务历史，并从中提取出可泛化的、能被未来任务复用的经验教训或关键事实。例如：'在这个项目中，使用`npm run build`来构建应用。'或'修改CSS文件后，需要刷新页面才能看到效果。'。请只输出一个由换行符分隔的知识点列表。",
              "allowedTools": []
            }
          ],
          "items": {
            "type": "object",
            "title": "角色配置",
            "properties": {
              "name": { "type": "string", "description": "角色的唯一名称。" },
              "model": { "type": "string", "description": "分配给此角色的已定义模型的名称。" },
              "systemPrompt": { "type": "string", "description": "此角色的系统提示。", "format": "multiline" },
              "allowedTools": { "type": "array", "description": "允许此角色使用的工具列表。", "items": { "type": "string" } }
            },
            "required": ["name", "model", "systemPrompt"]
          }
        }
      }
    }
  },
  "scripts": {
    "build-js": "npx esbuild src/extension.js --bundle --outfile=dist/extension.js --platform=node --external:vscode --format=cjs",
    "copy-assets": "npx copyfiles -u 2 \"src/ui/assets/**/*\" dist",
    "compile": "npm run build-js && npm run copy-assets",
    "watch": "npm run compile -- --watch",
    "bundle": "npm run build-js -- --minify && npm run copy-assets",
    "lint": "eslint src",
    "package-vsix": "npm run bundle && npx vsce package --no-dependencies"
  },
  "devDependencies": {
    "esbuild": "^0.20.0",
    "eslint": "^8.57.0",
    "@vscode/vsce": "^2.27.0",
    "copyfiles": "^2.4.1",
    "globals": "^15.0.0"
  }
}
